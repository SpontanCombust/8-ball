{
  "version": 3,
  "sources": ["../../docs/dist/Game.js", "../../docs/dist/PoolGame.js", "../../docs/dist/Vec2.js", "../../docs/dist/Ball.js", "../../docs/dist/physics_demo/DemoScenarios.js", "../../docs/dist/physics_demo/PhysicsDemoPoolGame.js", "../../docs/dist/index.js"],
  "sourcesContent": ["export default class Game {\n  constructor(canvas) {\n    this.lastTimestamp = 0;\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n  }\n  start() {\n    window.requestAnimationFrame((ts) => this.gameLoop(ts));\n  }\n  gameLoop(timestamp) {\n    const dt = (timestamp - this.lastTimestamp) / 1e3;\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.onUpdate(dt);\n    this.onDraw();\n    this.lastTimestamp = timestamp;\n    window.requestAnimationFrame((ts) => this.gameLoop(ts));\n  }\n}\n", "import Game from \"./Game.js\";\nexport default class PoolGame extends Game {\n  constructor() {\n    super(...arguments);\n    this.balls = [];\n  }\n  onUpdate(dt) {\n    for (let ball of this.balls) {\n      ball.update(dt);\n    }\n    for (let i = 0; i < this.balls.length; i++) {\n      for (let j = i + 1; j < this.balls.length; j++) {\n        if (this.balls[i].resolveCollision(this.balls[j])) {\n          this.balls[i].impact(this.balls[j]);\n        }\n      }\n    }\n  }\n  onDraw() {\n    for (const ball of this.balls) {\n      ball.draw(this.ctx);\n    }\n  }\n}\n", "const _Vec2 = class {\n  constructor(x, y) {\n    this.x = x ? x : 0;\n    this.y = y ? y : 0;\n  }\n  len() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  normalized() {\n    const len = this.len();\n    const normX = this.x / len;\n    const normY = this.y / len;\n    return new _Vec2(isNaN(normX) ? 0 : normX, isNaN(normY) ? 0 : normY);\n  }\n  toString() {\n    return `[${this.x.toFixed(4)}, ${this.y.toFixed(4)}]`;\n  }\n  static sum(v1, v2) {\n    return new _Vec2(v1.x + v2.x, v1.y + v2.y);\n  }\n  static diff(v1, v2) {\n    return new _Vec2(v1.x - v2.x, v1.y - v2.y);\n  }\n  static scaled(v, s) {\n    return new _Vec2(v.x * s, v.y * s);\n  }\n  static dot(v1, v2) {\n    return v1.x * v2.x + v1.y * v2.y;\n  }\n};\nlet Vec2 = _Vec2;\nVec2.ZERO = new _Vec2(0, 0);\nVec2.UP = new _Vec2(0, -1);\nVec2.DOWN = new _Vec2(0, 1);\nVec2.LEFT = new _Vec2(-1, 0);\nVec2.RIGHT = new _Vec2(1, 0);\nexport default Vec2;\n", "import Vec2 from \"./Vec2.js\";\nconst _Ball = class {\n  constructor(position, radius, mass, elasticity) {\n    this.pushForce = new Vec2();\n    this.acceleration = new Vec2();\n    this.velocity = new Vec2();\n    this.position = position;\n    this.radius = radius;\n    this.mass = mass != void 0 ? mass : 1;\n    this.elasticity = elasticity != void 0 ? Math.min(Math.max(0, elasticity), 1) : 1;\n  }\n  resolveCollision(other) {\n    const posDiff = Vec2.diff(other.position, this.position);\n    const radiusSum = this.radius + other.radius;\n    const intersectLen = radiusSum - posDiff.len();\n    if (intersectLen > 0) {\n      const displacement = Vec2.scaled(posDiff.normalized(), intersectLen / 2);\n      this.position = Vec2.diff(this.position, displacement);\n      other.position = Vec2.sum(other.position, displacement);\n      return true;\n    }\n    return false;\n  }\n  resistanceForce() {\n    return Vec2.scaled(this.velocity.normalized(), -_Ball.RESISTANCE_FORCE_MAGN);\n  }\n  applyPushForce(f) {\n    this.pushForce = f;\n  }\n  resetPushForce() {\n    this.pushForce = Vec2.ZERO;\n  }\n  momentum() {\n    return Vec2.scaled(this.velocity, this.mass);\n  }\n  kineticEnergy() {\n    return this.mass * this.velocity.len() * this.velocity.len() / 2;\n  }\n  impact(impacted) {\n    const dirToImpacted = Vec2.diff(impacted.position, this.position).normalized();\n    const thisTransferableMomentumMagn = this.momentum().len() * Vec2.dot(this.velocity.normalized(), dirToImpacted);\n    const thisTransferableMomentum = Vec2.scaled(dirToImpacted, thisTransferableMomentumMagn);\n    const impactedTransferableMomentumMagn = impacted.momentum().len() * Vec2.dot(impacted.velocity.normalized(), dirToImpacted);\n    const impactedTransferableMomentum = Vec2.scaled(dirToImpacted, impactedTransferableMomentumMagn);\n    this.velocity = this.velocityFromMomentum(Vec2.diff(this.momentum(), thisTransferableMomentum));\n    impacted.velocity = impacted.velocityFromMomentum(Vec2.diff(impacted.momentum(), impactedTransferableMomentum));\n    const thisTransferableVelocity = this.velocityFromMomentum(thisTransferableMomentum);\n    const impactedTransferableVelocity = impacted.velocityFromMomentum(impactedTransferableMomentum);\n    const distributedVelocity = this.computeImpactVelocityDistribution(impacted, thisTransferableVelocity, impactedTransferableVelocity);\n    const totalTransferableVelocity = Vec2.sum(thisTransferableVelocity, impactedTransferableVelocity);\n    this.velocity = Vec2.sum(this.velocity, distributedVelocity);\n    impacted.velocity = Vec2.sum(impacted.velocity, Vec2.diff(totalTransferableVelocity, distributedVelocity));\n  }\n  velocityFromMomentum(momentum) {\n    return Vec2.scaled(momentum, 1 / this.mass);\n  }\n  computeImpactVelocityDistribution(impacted, thisTransferableVelocity, impactedTransferableVelocity) {\n    return Vec2.sum(Vec2.scaled(thisTransferableVelocity, (this.mass - impacted.mass) / (this.mass + impacted.mass)), Vec2.scaled(impactedTransferableVelocity, 2 * impacted.mass / (this.mass + impacted.mass)));\n  }\n  update(dt) {\n    let finalForce;\n    if (this.pushForce.len() >= this.resistanceForce().len()) {\n      finalForce = Vec2.diff(this.pushForce, this.resistanceForce());\n    } else if (this.velocity.len() > 1e-4) {\n      finalForce = this.resistanceForce();\n    } else {\n      finalForce = Vec2.ZERO;\n    }\n    this.acceleration = Vec2.scaled(finalForce, 1 / this.mass);\n    this.velocity = Vec2.sum(this.velocity, Vec2.scaled(this.acceleration, dt));\n    this.position = Vec2.sum(this.position, Vec2.scaled(this.velocity, dt));\n  }\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.position.x, this.position.y, this.radius, 0, Math.PI * 2, false);\n    ctx.fillStyle = \"blue\";\n    ctx.fill();\n    ctx.lineWidth = 3;\n    ctx.stroke();\n  }\n};\nlet Ball = _Ball;\nBall.RESISTANCE_FORCE_MAGN = 0.5;\nexport default Ball;\n", "import Ball from \"../Ball.js\";\nimport Vec2 from \"../Vec2.js\";\nexport function playDemoScenario1(table, canvas) {\n  table.balls = [\n    new Ball(new Vec2(canvas.width / 2 - 300, canvas.height / 2), 50),\n    new Ball(new Vec2(canvas.width / 2 + 100, canvas.height / 2), 50)\n  ];\n  table.balls[0].applyPushForce(new Vec2(300, 0));\n  setTimeout(() => {\n    table.balls[0].resetPushForce();\n  }, 1e3);\n}\nexport function playDemoScenario2(table, canvas) {\n  table.balls = [\n    new Ball(new Vec2(canvas.width / 2 - 300, canvas.height / 2), 50),\n    new Ball(new Vec2(canvas.width / 2 + 100, canvas.height / 2), 50)\n  ];\n  table.balls[0].applyPushForce(new Vec2(400, -60));\n  setTimeout(() => {\n    table.balls[0].resetPushForce();\n  }, 1e3);\n}\nexport function playDemoScenario3(table, canvas) {\n  table.balls = [\n    new Ball(new Vec2(canvas.width / 2 - 300, canvas.height / 2), 50),\n    new Ball(new Vec2(canvas.width / 2 + 100, canvas.height / 2), 50)\n  ];\n  table.balls[0].applyPushForce(new Vec2(300, 0));\n  table.balls[1].applyPushForce(new Vec2(60, 0));\n  setTimeout(() => {\n    table.balls[0].resetPushForce();\n  }, 1e3);\n}\nexport function playDemoScenario4(table, canvas) {\n  table.balls = [\n    new Ball(new Vec2(canvas.width / 2 - 300, canvas.height / 2), 50),\n    new Ball(new Vec2(canvas.width / 2 + 200, canvas.height / 2), 50)\n  ];\n  table.balls[0].applyPushForce(new Vec2(300, 0));\n  table.balls[1].applyPushForce(new Vec2(-300, 0));\n  setTimeout(() => {\n    table.balls[0].resetPushForce();\n    table.balls[1].resetPushForce();\n  }, 1e3);\n}\nexport function playDemoScenario5(table, canvas) {\n  table.balls = [\n    new Ball(new Vec2(canvas.width / 2 - 300, canvas.height / 2 - 200), 50),\n    new Ball(new Vec2(canvas.width / 2 + 200, canvas.height / 2 + 200), 50)\n  ];\n  table.balls[0].applyPushForce(new Vec2(400, 400));\n  table.balls[1].applyPushForce(new Vec2(-200, -200));\n  setTimeout(() => {\n    table.balls[0].resetPushForce();\n    table.balls[1].resetPushForce();\n  }, 1e3);\n}\nexport function playDemoScenario6(table, canvas) {\n  table.balls = [\n    new Ball(new Vec2(canvas.width / 2 - 300, canvas.height / 2 - 200), 50),\n    new Ball(new Vec2(canvas.width / 2 + 100, canvas.height / 2 - 170), 50)\n  ];\n  table.balls[0].applyPushForce(new Vec2(400, 400));\n  table.balls[1].applyPushForce(new Vec2(-300, 500));\n  setTimeout(() => {\n    table.balls[0].resetPushForce();\n    table.balls[1].resetPushForce();\n  }, 1e3);\n}\nexport function playDemoScenario7(table, canvas) {\n  table.balls = [\n    new Ball(new Vec2(canvas.width / 2 - 500, canvas.height / 2), 48),\n    new Ball(new Vec2(canvas.width / 2 - 200, canvas.height / 2), 48),\n    new Ball(new Vec2(canvas.width / 2 - 100, canvas.height / 2), 48),\n    new Ball(new Vec2(canvas.width / 2 + 0, canvas.height / 2), 48),\n    new Ball(new Vec2(canvas.width / 2 + 100, canvas.height / 2), 48),\n    new Ball(new Vec2(canvas.width / 2 + 200, canvas.height / 2), 48)\n  ];\n  table.balls[0].applyPushForce(new Vec2(400, 0));\n  setTimeout(() => {\n    table.balls[0].resetPushForce();\n  }, 1e3);\n}\n", "import PoolGame from \"../PoolGame.js\";\nimport {playDemoScenario1, playDemoScenario2, playDemoScenario3, playDemoScenario4, playDemoScenario5, playDemoScenario6, playDemoScenario7} from \"./DemoScenarios.js\";\nexport default class PhysicsDemoPoolGame extends PoolGame {\n  constructor(canvas) {\n    super(canvas);\n    this.style = `\n        ul {\n            list-style-type: none;\n            margin: 0;\n            padding: 0;\n            overflow: hidden;\n        }\n        \n        li {\n            float: left;\n            padding: 5px;\n        }\n    `;\n    this.demos = [\n      playDemoScenario1,\n      playDemoScenario2,\n      playDemoScenario3,\n      playDemoScenario4,\n      playDemoScenario5,\n      playDemoScenario6,\n      playDemoScenario7\n    ];\n    const styleSheet = document.createElement(\"style\");\n    styleSheet.innerText = this.style;\n    document.head.appendChild(styleSheet);\n    const ul = document.createElement(\"ul\");\n    this.canvas.parentNode?.insertBefore(ul, this.canvas);\n    for (let i = 0; i < this.demos.length; i++) {\n      const li = document.createElement(\"li\");\n      ul.appendChild(li);\n      const button = document.createElement(\"button\");\n      button.onclick = () => this.demos[i](this, this.canvas);\n      button.textContent = \"Scenario \" + (i + 1);\n      li.appendChild(button);\n    }\n  }\n}\n;\n", "import PhysicsDemoPoolGame from \"./physics_demo/PhysicsDemoPoolGame.js\";\nconst canvas = document.getElementById(\"canvas\");\ncanvas.width = canvas.offsetWidth;\ncanvas.height = canvas.offsetHeight;\nconst game = new PhysicsDemoPoolGame(canvas);\ngame.start();\nexport {};\n"],
  "mappings": "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",
  "names": []
}
