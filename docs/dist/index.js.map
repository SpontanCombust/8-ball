{
  "version": 3,
  "sources": ["../../docs/dist/Vec2.js", "../../docs/dist/Ball.js", "../../docs/dist/Utils.js", "../../docs/dist/Cue.js", "../../docs/dist/Game.js", "../../docs/dist/Line.js", "../../docs/dist/Pocket.js", "../../docs/dist/PoolGameState.js", "../../docs/dist/poolGameContexts/PoolGameState_RoundConclusion.js", "../../docs/dist/poolGameContexts/PoolGameState_RoundSimulation.js", "../../docs/dist/poolGameContexts/PoolGameState_Aiming.js", "../../docs/dist/poolGameContexts/PoolGameState_BallPlacement.js", "../../docs/dist/poolGameContexts/PoolGameState_Init.js", "../../docs/dist/PoolGame.js", "../../docs/dist/index.js"],
  "sourcesContent": ["const _Vec2 = class {\n  constructor(x, y) {\n    this.x = x ? x : 0;\n    this.y = y ? y : 0;\n  }\n  len() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  negated() {\n    return new _Vec2(-this.x, -this.y);\n  }\n  normalized() {\n    const len = this.len();\n    const normX = this.x / len;\n    const normY = this.y / len;\n    return new _Vec2(isNaN(normX) ? 0 : normX, isNaN(normY) ? 0 : normY);\n  }\n  reflected(normal) {\n    return _Vec2.diff(this, _Vec2.scaled(normal.normalized(), 2 * _Vec2.dot(normal.normalized(), this)));\n  }\n  toString() {\n    return `[${this.x.toFixed(4)}, ${this.y.toFixed(4)}]`;\n  }\n  static sum(v1, v2) {\n    return new _Vec2(v1.x + v2.x, v1.y + v2.y);\n  }\n  static diff(v1, v2) {\n    return new _Vec2(v1.x - v2.x, v1.y - v2.y);\n  }\n  static scaled(v, s) {\n    return new _Vec2(v.x * s, v.y * s);\n  }\n  static dot(v1, v2) {\n    return v1.x * v2.x + v1.y * v2.y;\n  }\n};\nlet Vec2 = _Vec2;\nVec2.ZERO = new _Vec2(0, 0);\nVec2.UP = new _Vec2(0, -1);\nVec2.DOWN = new _Vec2(0, 1);\nVec2.LEFT = new _Vec2(-1, 0);\nVec2.RIGHT = new _Vec2(1, 0);\nexport default Vec2;\n", "import Vec2 from \"./Vec2.js\";\nconst _Ball = class {\n  constructor(position, radius, lookVariant, mass) {\n    this.pushForce = new Vec2();\n    this.acceleration = new Vec2();\n    this.velocity = new Vec2();\n    this.position = position;\n    this.radius = radius;\n    this.lookVariant = lookVariant != void 0 ? lookVariant : 0;\n    this.mass = mass != void 0 ? mass : 1;\n  }\n  resistanceForce() {\n    const HALT_VELOCITY_THRESHOLD = 10;\n    let resistanceMultip = 1;\n    if (this.velocity.len() < HALT_VELOCITY_THRESHOLD) {\n      resistanceMultip = this.velocity.len() / HALT_VELOCITY_THRESHOLD;\n    }\n    return Vec2.scaled(this.velocity.normalized(), -_Ball.RESISTANCE_FORCE_MAGN * resistanceMultip);\n  }\n  momentum() {\n    return Vec2.scaled(this.velocity, this.mass);\n  }\n  kineticEnergy() {\n    return this.mass * this.velocity.len() * this.velocity.len() / 2;\n  }\n  isStripedVariant() {\n    return this.lookVariant >= 9 && this.lookVariant <= 15;\n  }\n  isSolidVariant() {\n    return this.lookVariant >= 1 && this.lookVariant <= 8;\n  }\n  resolveCollision(collider) {\n    if (collider instanceof _Ball) {\n      return this.resolveCollisionWithBall(collider);\n    } else {\n      return this.resolveCollisionWithWall(collider);\n    }\n  }\n  resolveCollisionWithBall(other) {\n    const posDiff = Vec2.diff(other.position, this.position);\n    const radiusSum = this.radius + other.radius;\n    const intersectLen = radiusSum - posDiff.len();\n    if (intersectLen > 0) {\n      const displacement = Vec2.scaled(posDiff.normalized(), intersectLen / 2);\n      this.position = Vec2.diff(this.position, displacement);\n      other.position = Vec2.sum(other.position, displacement);\n      return true;\n    }\n    return false;\n  }\n  resolveCollisionWithWall(wall) {\n    const normal = wall.normalTo(this.position);\n    const possibleCollisionPoint = Vec2.diff(this.position, normal);\n    if (normal.len() < this.radius) {\n      if (wall.contains(possibleCollisionPoint) || Vec2.diff(this.position, wall.p1).len() < this.radius || Vec2.diff(this.position, wall.p2).len() < this.radius) {\n        this.position = Vec2.sum(possibleCollisionPoint, Vec2.scaled(normal.normalized(), this.radius));\n        return true;\n      }\n    }\n    return false;\n  }\n  impact(impacted) {\n    if (impacted instanceof _Ball) {\n      this.impactWithBall(impacted);\n    } else {\n      this.impactWithWall(impacted);\n    }\n  }\n  impactWithBall(impacted) {\n    const dirToImpacted = Vec2.diff(impacted.position, this.position).normalized();\n    const thisTransferableMomentumMagn = this.momentum().len() * Vec2.dot(this.velocity.normalized(), dirToImpacted);\n    const thisTransferableMomentum = Vec2.scaled(dirToImpacted, thisTransferableMomentumMagn);\n    const impactedTransferableMomentumMagn = impacted.momentum().len() * Vec2.dot(impacted.velocity.normalized(), dirToImpacted);\n    const impactedTransferableMomentum = Vec2.scaled(dirToImpacted, impactedTransferableMomentumMagn);\n    this.velocity = this.velocityFromMomentum(Vec2.diff(this.momentum(), thisTransferableMomentum));\n    impacted.velocity = impacted.velocityFromMomentum(Vec2.diff(impacted.momentum(), impactedTransferableMomentum));\n    const thisTransferableVelocity = this.velocityFromMomentum(thisTransferableMomentum);\n    const impactedTransferableVelocity = impacted.velocityFromMomentum(impactedTransferableMomentum);\n    const distributedVelocity = this.computeImpactVelocityDistribution(impacted, thisTransferableVelocity, impactedTransferableVelocity);\n    const totalTransferableVelocity = Vec2.sum(thisTransferableVelocity, impactedTransferableVelocity);\n    this.velocity = Vec2.sum(this.velocity, distributedVelocity);\n    impacted.velocity = Vec2.sum(impacted.velocity, Vec2.diff(totalTransferableVelocity, distributedVelocity));\n  }\n  impactWithWall(impacted) {\n    const normal = impacted.normalTo(this.position);\n    this.velocity = Vec2.scaled(this.velocity.reflected(normal.normalized()), 1 - _Ball.WALL_VELOCITY_ABSORPTION_FACTOR);\n  }\n  velocityFromMomentum(momentum) {\n    return Vec2.scaled(momentum, 1 / this.mass);\n  }\n  computeImpactVelocityDistribution(impacted, thisTransferableVelocity, impactedTransferableVelocity) {\n    return Vec2.sum(Vec2.scaled(thisTransferableVelocity, (this.mass - impacted.mass) / (this.mass + impacted.mass)), Vec2.scaled(impactedTransferableVelocity, 2 * impacted.mass / (this.mass + impacted.mass)));\n  }\n  update(dt) {\n    let finalForce;\n    if (this.pushForce.len() >= this.resistanceForce().len()) {\n      finalForce = Vec2.diff(this.pushForce, this.resistanceForce());\n    } else if (this.velocity.len() > 1e-4) {\n      finalForce = this.resistanceForce();\n    } else {\n      finalForce = Vec2.ZERO;\n    }\n    this.acceleration = Vec2.scaled(finalForce, 1 / this.mass);\n    this.velocity = Vec2.sum(this.velocity, Vec2.scaled(this.acceleration, dt));\n    this.position = Vec2.sum(this.position, Vec2.scaled(this.velocity, dt));\n  }\n  draw(ctx) {\n    switch (this.lookVariant) {\n      case 1:\n        this.drawSolid(ctx, \"yellow\");\n        break;\n      case 2:\n        this.drawSolid(ctx, \"blue\");\n        break;\n      case 3:\n        this.drawSolid(ctx, \"red\");\n        break;\n      case 4:\n        this.drawSolid(ctx, \"purple\");\n        break;\n      case 5:\n        this.drawSolid(ctx, \"orange\");\n        break;\n      case 6:\n        this.drawSolid(ctx, \"green\");\n        break;\n      case 7:\n        this.drawSolid(ctx, \"brown\");\n        break;\n      case 8:\n        this.drawSolid(ctx, \"black\");\n        break;\n      case 9:\n        this.drawStriped(ctx, \"yellow\");\n        break;\n      case 10:\n        this.drawStriped(ctx, \"blue\");\n        break;\n      case 11:\n        this.drawStriped(ctx, \"red\");\n        break;\n      case 12:\n        this.drawStriped(ctx, \"purple\");\n        break;\n      case 13:\n        this.drawStriped(ctx, \"orange\");\n        break;\n      case 14:\n        this.drawStriped(ctx, \"green\");\n        break;\n      case 15:\n        this.drawStriped(ctx, \"brown\");\n        break;\n      default:\n        this.drawWhite(ctx);\n    }\n  }\n  drawWhite(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.position.x, this.position.y, this.radius, 0, Math.PI * 2, false);\n    ctx.fillStyle = \"white\";\n    ctx.fill();\n    ctx.strokeStyle = \"black\";\n    ctx.lineWidth = 1;\n    ctx.stroke();\n  }\n  drawSolid(ctx, color) {\n    ctx.strokeStyle = \"black\";\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.arc(this.position.x, this.position.y, this.radius, 0, Math.PI * 2, false);\n    ctx.fillStyle = color;\n    ctx.fill();\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.arc(this.position.x, this.position.y, this.radius * 0.5, 0, Math.PI * 2, false);\n    ctx.fillStyle = \"white\";\n    ctx.fill();\n    ctx.stroke();\n    ctx.font = \"17px serif\";\n    ctx.textAlign = \"center\";\n    ctx.fillStyle = \"black\";\n    ctx.textBaseline = \"alphabetic\";\n    ctx.fillText(this.lookVariant.toString(), this.position.x, this.position.y + 5);\n  }\n  drawStriped(ctx, color) {\n    ctx.strokeStyle = \"black\";\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.arc(this.position.x, this.position.y, this.radius, 0, Math.PI * 2, false);\n    ctx.fillStyle = \"white\";\n    ctx.fill();\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.arc(this.position.x, this.position.y, this.radius, Math.PI * 0.25, Math.PI * 1.75, true);\n    ctx.arc(this.position.x, this.position.y, this.radius, Math.PI * 1.25, Math.PI * 0.75, true);\n    ctx.arc(this.position.x, this.position.y, this.radius, Math.PI * 0.25, Math.PI * 1.75, true);\n    ctx.fillStyle = color;\n    ctx.fill();\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.arc(this.position.x, this.position.y, this.radius * 0.5, 0, Math.PI * 2, false);\n    ctx.fillStyle = \"white\";\n    ctx.fill();\n    ctx.stroke();\n    ctx.font = \"17px serif\";\n    ctx.textAlign = \"center\";\n    ctx.fillStyle = \"black\";\n    ctx.textBaseline = \"alphabetic\";\n    ctx.fillText(this.lookVariant.toString(), this.position.x, this.position.y + 5);\n  }\n};\nlet Ball = _Ball;\nBall.RESISTANCE_FORCE_MAGN = 50;\nBall.WALL_VELOCITY_ABSORPTION_FACTOR = 0.1;\nexport default Ball;\n", "export function roundRect(ctx, x, y, width, height, radius = 5, fill = false, stroke = true) {\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.lineTo(x + width - radius, y);\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n  ctx.lineTo(x + width, y + height - radius);\n  ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n  ctx.lineTo(x + radius, y + height);\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n  ctx.lineTo(x, y + radius);\n  ctx.quadraticCurveTo(x, y, x + radius, y);\n  ctx.closePath();\n  if (fill) {\n    ctx.fill();\n  }\n  if (stroke) {\n    ctx.stroke();\n  }\n}\nexport function clamp(x, min, max) {\n  return Math.min(Math.max(x, min), max);\n}\n", "import {clamp} from \"./Utils.js\";\nimport Vec2 from \"./Vec2.js\";\nconst _Cue = class {\n  constructor(canvas) {\n    this.enabled = false;\n    this.target = null;\n    this.mousePos = new Vec2();\n    this.strength = 0.5;\n    this.onHit = () => {\n    };\n    this.setupCanvasObserver(canvas);\n  }\n  setupCanvasObserver(canvas) {\n    canvas.addEventListener(\"mousemove\", (ev) => {\n      const rect = canvas.getBoundingClientRect();\n      this.mousePos = new Vec2(ev.clientX - rect.left, ev.clientY - rect.top);\n    });\n    canvas.addEventListener(\"wheel\", (ev) => {\n      ev.preventDefault();\n      this.strength = clamp(this.strength - ev.deltaY / 100, 0, 1);\n    });\n    canvas.addEventListener(\"click\", (ev) => {\n      if (ev.button == 0) {\n        this.hitTarget();\n      }\n    });\n  }\n  directionFromTarget() {\n    if (this.target && this.enabled) {\n      return Vec2.diff(this.mousePos, this.target.position).normalized();\n    }\n    return Vec2.ZERO;\n  }\n  getHitStrengh() {\n    return this.strength * _Cue.STRENGH_MULTIPLIER;\n  }\n  hitTarget() {\n    if (this.target && this.enabled) {\n      this.target.velocity = Vec2.scaled(this.directionFromTarget().negated(), this.getHitStrengh());\n      this.onHit();\n    }\n  }\n  draw(ctx) {\n    if (this.target && this.enabled) {\n      const dir = this.directionFromTarget();\n      let offset = Vec2.scaled(dir, this.target.radius + this.strength * _Cue.MAX_OFFSET_FROM_TARGET);\n      const lineToRelative = (from, to) => {\n        const fromPos = Vec2.sum(this.target.position, Vec2.scaled(dir, offset.len() + from));\n        const toPos = Vec2.sum(this.target.position, Vec2.scaled(dir, offset.len() + to));\n        ctx.moveTo(fromPos.x, fromPos.y);\n        ctx.lineTo(toPos.x, toPos.y);\n      };\n      ctx.beginPath();\n      ctx.lineWidth = 10;\n      lineToRelative(0, 10);\n      ctx.strokeStyle = \"black\";\n      ctx.stroke();\n      ctx.beginPath();\n      lineToRelative(10, 60);\n      ctx.strokeStyle = \"white\";\n      ctx.stroke();\n      ctx.beginPath();\n      lineToRelative(60, 450);\n      ctx.strokeStyle = \"burlywood\";\n      ctx.stroke();\n      ctx.beginPath();\n      lineToRelative(450, 750);\n      ctx.strokeStyle = \"black\";\n      ctx.stroke();\n    }\n  }\n};\nlet Cue = _Cue;\nCue.MAX_OFFSET_FROM_TARGET = 200;\nCue.STRENGH_MULTIPLIER = 1e3;\nexport default Cue;\n", "export default class Game {\n  constructor(canvas) {\n    this.lastTimestamp = 0;\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n  }\n  start() {\n    window.requestAnimationFrame((ts) => this.gameLoop(ts));\n  }\n  gameLoop(timestamp) {\n    const dt = (timestamp - this.lastTimestamp) / 1e3;\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.onUpdate(dt);\n    this.onDraw();\n    this.lastTimestamp = timestamp;\n    window.requestAnimationFrame((ts) => this.gameLoop(ts));\n  }\n}\n", "import Vec2 from \"./Vec2.js\";\nexport default class Line {\n  constructor(p1, p2) {\n    this.p1 = p1;\n    this.p2 = p2;\n    this.a = (this.p1.y - this.p2.y) / (this.p1.x - this.p2.x);\n    this.b = this.p1.y - this.a * this.p1.x;\n  }\n  isPerfectlyHorizontal() {\n    return Math.abs(this.p1.y - this.p2.y) < 1e-5;\n  }\n  isPerfectlyVertical() {\n    return Math.abs(this.p1.x - this.p2.x) < 1e-5;\n  }\n  contains(p) {\n    function numberInRange(x, n1, n2) {\n      if (n1 < n2) {\n        return n1 <= x && x <= n2;\n      } else {\n        return n2 <= x && x <= n1;\n      }\n    }\n    if (numberInRange(p.x, this.p1.x, this.p2.x) && numberInRange(p.y, this.p1.y, this.p2.y)) {\n      if (this.isPerfectlyVertical() || this.isPerfectlyHorizontal()) {\n        return true;\n      }\n      const y = this.a * p.x + this.b;\n      return Math.abs(y - p.y) < 1e-5;\n    }\n    return false;\n  }\n  normalTo(p0) {\n    if (this.isPerfectlyVertical()) {\n      return new Vec2(p0.x - this.p1.x, 0);\n    } else if (this.isPerfectlyHorizontal()) {\n      return new Vec2(0, p0.y - this.p1.y);\n    }\n    const a0 = -1 / this.a;\n    const b0 = p0.y + p0.x / this.a;\n    const x = (b0 - this.b) / (this.a - a0);\n    const y = a0 * x + b0;\n    return Vec2.diff(p0, new Vec2(x, y));\n  }\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.moveTo(this.p1.x, this.p1.y);\n    ctx.lineWidth = 4;\n    ctx.strokeStyle = \"black\";\n    ctx.lineTo(this.p2.x, this.p2.y);\n    ctx.stroke();\n  }\n}\n", "import Vec2 from \"./Vec2.js\";\nconst _Pocket = class {\n  constructor(position, radius) {\n    this.position = position;\n    this.radius = radius;\n  }\n  isBallCaptured(ball) {\n    const dist = Vec2.diff(ball.position, this.position).len();\n    if (dist < this.radius) {\n      return this.radius + ball.radius - dist < 2 * this.radius * _Pocket.CAPTURE_DIAMETER_TRESHOLD;\n    }\n    return false;\n  }\n  draw(ctx) {\n    ctx.fillStyle = \"black\";\n    ctx.beginPath();\n    ctx.arc(this.position.x, this.position.y, this.radius, 0, 2 * Math.PI);\n    ctx.fill();\n  }\n};\nlet Pocket = _Pocket;\nPocket.CAPTURE_DIAMETER_TRESHOLD = 0.7;\nexport default Pocket;\n", "export default class PoolGameState {\n  constructor(game) {\n    this.game = game;\n  }\n  onUpdate(dt) {\n  }\n}\n", "import PoolGameState from \"../PoolGameState.js\";\nimport PoolGameState_Aiming from \"./PoolGameState_Aiming.js\";\nimport PoolGameContext_BallPlacement from \"./PoolGameState_BallPlacement.js\";\nexport default class PoolGameState_RoundConclusion extends PoolGameState {\n  constructor(game, scoredBalls) {\n    super(game);\n    this.scoredBalls = scoredBalls;\n  }\n  onEnterState() {\n    if (this.scoredBalls.length == 0) {\n      this.game.switchPlayer();\n      this.game.makeAnnouncement(\"No ball scored! Player \" + this.game.currentPlayer + \"'s turn!\", 2e3);\n      this.game.changeState(new PoolGameState_Aiming(this.game));\n      return;\n    }\n    let scoredWhite = false;\n    let scoredBlack = false;\n    let scoredIncorrectVariant = false;\n    let won = false;\n    for (let i = 0; i < this.scoredBalls.length; i++) {\n      const ball = this.scoredBalls[i];\n      if (ball.isStripedVariant()) {\n        this.game.scoredBallsP2.push(ball);\n      } else if (ball.isSolidVariant() && ball.lookVariant != 8) {\n        this.game.scoredBallsP1.push(ball);\n      }\n      if (!ball.isSolidVariant() && !ball.isStripedVariant()) {\n        scoredWhite = true;\n      } else if (ball.lookVariant == 8) {\n        scoredBlack = true;\n        if (i == this.scoredBalls.length - 1 && this.game.ballsOnTable.length <= 1) {\n          won = true;\n        }\n      } else if (this.game.currentPlayer == 1 && ball.isStripedVariant() || this.game.currentPlayer == 2 && ball.isSolidVariant()) {\n        scoredIncorrectVariant = true;\n      }\n    }\n    if (scoredBlack) {\n      const opponent = this.game.currentPlayer == 1 ? 2 : 1;\n      if (won) {\n        this.game.announcementText = \"Player \" + this.game.currentPlayer + \" won!\";\n      } else {\n        this.game.announcementText = \"Faul! Player \" + opponent + \" won!\";\n      }\n    } else if (scoredWhite) {\n      this.game.makeAnnouncement(\"Faul! White ball scored! Player \" + this.game.currentPlayer + \"'s turn!\", 4e3);\n      this.game.ballsOnTable.push(this.game.whiteBall);\n      this.game.switchPlayer();\n      this.game.changeState(new PoolGameContext_BallPlacement(this.game, false));\n    } else if (scoredIncorrectVariant) {\n      this.game.makeAnnouncement(\"Faul! Incorrect ball scored! Player \" + this.game.currentPlayer + \"'s turn!\", 4e3);\n      this.game.switchPlayer();\n      this.game.changeState(new PoolGameState_Aiming(this.game));\n    } else {\n      this.game.makeAnnouncement(\"Scored!\", 2e3);\n      this.game.changeState(new PoolGameState_Aiming(this.game));\n    }\n  }\n  onLeaveState() {\n  }\n}\n", "import PoolGameState from \"../PoolGameState.js\";\nimport PoolGameState_RoundConclusion from \"./PoolGameState_RoundConclusion.js\";\nexport default class PoolGameState_RoundSimulation extends PoolGameState {\n  constructor() {\n    super(...arguments);\n    this.ballsInPockets = [];\n  }\n  onEnterState() {\n    this.game.cue.enabled = false;\n  }\n  onLeaveState() {\n  }\n  updateBallPhysics(dt) {\n    for (let ball of this.game.ballsOnTable) {\n      ball.update(dt);\n    }\n  }\n  computeCollisions() {\n    for (let i = 0; i < this.game.ballsOnTable.length; i++) {\n      for (let j = 0; j < this.game.walls.length; j++) {\n        if (this.game.ballsOnTable[i].resolveCollision(this.game.walls[j])) {\n          this.game.ballsOnTable[i].impact(this.game.walls[j]);\n        }\n      }\n      for (let k = i + 1; k < this.game.ballsOnTable.length; k++) {\n        if (this.game.ballsOnTable[i].resolveCollision(this.game.ballsOnTable[k])) {\n          this.game.ballsOnTable[i].impact(this.game.ballsOnTable[k]);\n        }\n      }\n    }\n  }\n  isAnyBallMoving() {\n    for (let ball of this.game.ballsOnTable) {\n      if (ball.velocity.len() > 0.01) {\n        return true;\n      }\n    }\n    return false;\n  }\n  checkPockets() {\n    for (let i = 0; i < this.game.pockets.length; i++) {\n      for (let j = 0; j < this.game.ballsOnTable.length; j++) {\n        if (this.game.pockets[i].isBallCaptured(this.game.ballsOnTable[j])) {\n          this.ballsInPockets.push(this.game.ballsOnTable[j]);\n          this.game.ballsOnTable.splice(j, 1);\n          break;\n        }\n      }\n    }\n  }\n  onUpdate(dt) {\n    this.updateBallPhysics(dt);\n    this.computeCollisions();\n    this.checkPockets();\n    if (!this.isAnyBallMoving()) {\n      this.game.changeState(new PoolGameState_RoundConclusion(this.game, this.ballsInPockets));\n    }\n  }\n}\n", "import PoolGameState from \"../PoolGameState.js\";\nimport PoolGameState_RoundSimulation from \"./PoolGameState_RoundSimulation.js\";\nexport default class PoolGameState_Aiming extends PoolGameState {\n  onEnterState() {\n    this.game.cue.enabled = true;\n    this.game.cue.onHit = () => this.game.changeState(new PoolGameState_RoundSimulation(this.game));\n  }\n  onLeaveState() {\n    this.game.cue.enabled = false;\n    this.game.cue.onHit = () => {\n    };\n  }\n}\n", "import PoolGame from \"../PoolGame.js\";\nimport {clamp} from \"../Utils.js\";\nimport Vec2 from \"../Vec2.js\";\nimport PoolGameState from \"../PoolGameState.js\";\nimport PoolGameState_Aiming from \"./PoolGameState_Aiming.js\";\nexport default class PoolGameContext_BallPlacement extends PoolGameState {\n  constructor(game, startingRound) {\n    super(game);\n    this.handleMouseMove = (ev) => {\n      let newPos = new Vec2(ev.offsetX, ev.offsetY);\n      let horizontalBoundry;\n      if (this.canPlaceAnywhere) {\n        horizontalBoundry = PoolGame.PLAYABLE_AREA[0] + PoolGame.PLAYABLE_AREA[2] - PoolGame.BALL_RADIUS;\n      } else {\n        horizontalBoundry = PoolGame.PLAYABLE_AREA[0] + PoolGame.PLAYABLE_AREA[2] / 4 - PoolGame.BALL_RADIUS;\n      }\n      newPos.x = clamp(newPos.x, PoolGame.PLAYABLE_AREA[0] + PoolGame.BALL_RADIUS, horizontalBoundry);\n      newPos.y = clamp(newPos.y, PoolGame.PLAYABLE_AREA[1] + PoolGame.BALL_RADIUS, PoolGame.PLAYABLE_AREA[1] + PoolGame.PLAYABLE_AREA[3] - PoolGame.BALL_RADIUS);\n      this.game.whiteBall.position = newPos;\n    };\n    this.handleMouseClick = (ev) => {\n      if (ev.button == 0) {\n        this.game.changeState(new PoolGameState_Aiming(this.game));\n      }\n    };\n    this.canPlaceAnywhere = !startingRound;\n  }\n  onEnterState() {\n    this.game.cue.enabled = false;\n    this.game.canvas.addEventListener(\"mousemove\", this.handleMouseMove);\n    this.game.canvas.addEventListener(\"click\", this.handleMouseClick);\n  }\n  onLeaveState() {\n    this.game.canvas.removeEventListener(\"mousemove\", this.handleMouseMove);\n    this.game.canvas.removeEventListener(\"click\", this.handleMouseClick);\n  }\n}\n", "import PoolGameState from \"../PoolGameState.js\";\nimport PoolGameContext_BallPlacement from \"./PoolGameState_BallPlacement.js\";\nexport default class PoolGameContext_Init extends PoolGameState {\n  onEnterState() {\n    this.game.changeState(new PoolGameContext_BallPlacement(this.game, true));\n  }\n  onLeaveState() {\n  }\n}\n", "import Ball from \"./Ball.js\";\nimport Cue from \"./Cue.js\";\nimport Game from \"./Game.js\";\nimport Line from \"./Line.js\";\nimport Pocket from \"./Pocket.js\";\nimport PoolGameContext_Init from \"./poolGameContexts/PoolGameState_Init.js\";\nimport {roundRect} from \"./Utils.js\";\nimport Vec2 from \"./Vec2.js\";\nconst _PoolGame = class extends Game {\n  constructor(canvas) {\n    super(canvas);\n    this.ballsOnTable = [];\n    this.walls = [];\n    this.pockets = [];\n    this.currentPlayer = 1;\n    this.scoredBallsP1 = [];\n    this.scoredBallsP2 = [];\n    this.announcementText = \"\";\n    this.cue = new Cue(this.canvas);\n    this.whiteBall = new Ball(Vec2.ZERO, _PoolGame.BALL_RADIUS, 0);\n    this.setupWallColliders();\n    this.setupPockets();\n    this.state = new PoolGameContext_Init(this);\n    this.state.onEnterState();\n    this.resetGame(true);\n  }\n  changeState(state) {\n    this.state.onLeaveState();\n    this.state = state;\n    this.state.onEnterState();\n  }\n  setupWallColliders() {\n    for (const wall of _PoolGame.WALL_VERTICES) {\n      for (let i = 0; i < wall.length - 1; i++) {\n        this.walls.push(new Line(wall[i], wall[i + 1]));\n      }\n    }\n  }\n  setupPockets() {\n    this.pockets = [\n      new Pocket(new Vec2(150, 170), 40),\n      new Pocket(new Vec2(900, 160), 35),\n      new Pocket(new Vec2(1650, 170), 40),\n      new Pocket(new Vec2(150, 870), 40),\n      new Pocket(new Vec2(900, 880), 35),\n      new Pocket(new Vec2(1650, 870), 40)\n    ];\n  }\n  resetGame(init = false) {\n    this.resetPlayerScore();\n    this.resetBallFormation();\n    this.currentPlayer = 1;\n    if (!init) {\n      this.changeState(new PoolGameContext_Init(this));\n    }\n  }\n  resetBallFormation() {\n    this.ballsOnTable = [\n      this.whiteBall,\n      new Ball(new Vec2(1275, 520), _PoolGame.BALL_RADIUS, 1),\n      new Ball(new Vec2(1310, 500), _PoolGame.BALL_RADIUS, 2),\n      new Ball(new Vec2(1310, 540), _PoolGame.BALL_RADIUS, 3),\n      new Ball(new Vec2(1345, 480), _PoolGame.BALL_RADIUS, 4),\n      new Ball(new Vec2(1345, 520), _PoolGame.BALL_RADIUS, 5),\n      new Ball(new Vec2(1345, 560), _PoolGame.BALL_RADIUS, 6),\n      new Ball(new Vec2(1380, 460), _PoolGame.BALL_RADIUS, 7),\n      new Ball(new Vec2(1380, 500), _PoolGame.BALL_RADIUS, 8),\n      new Ball(new Vec2(1380, 540), _PoolGame.BALL_RADIUS, 9),\n      new Ball(new Vec2(1380, 580), _PoolGame.BALL_RADIUS, 10),\n      new Ball(new Vec2(1415, 440), _PoolGame.BALL_RADIUS, 11),\n      new Ball(new Vec2(1415, 480), _PoolGame.BALL_RADIUS, 12),\n      new Ball(new Vec2(1415, 520), _PoolGame.BALL_RADIUS, 13),\n      new Ball(new Vec2(1415, 560), _PoolGame.BALL_RADIUS, 14),\n      new Ball(new Vec2(1415, 600), _PoolGame.BALL_RADIUS, 15)\n    ];\n    this.whiteBall.position = new Vec2(525, 520);\n    this.cue.target = this.whiteBall;\n  }\n  resetPlayerScore() {\n    this.scoredBallsP1 = [];\n    this.scoredBallsP2 = [];\n  }\n  switchPlayer() {\n    this.currentPlayer = this.currentPlayer == 1 ? 2 : 1;\n  }\n  makeAnnouncement(text, howLong) {\n    this.announcementText = text;\n    setTimeout(() => {\n      this.announcementText = \"\";\n    }, howLong);\n  }\n  onUpdate(dt) {\n    this.state.onUpdate(dt);\n  }\n  drawPlayerScoresPanel() {\n    this.ctx.fillStyle = \"black\";\n    this.ctx.font = \"30px arial\";\n    this.ctx.textBaseline = \"bottom\";\n    this.ctx.textAlign = \"right\";\n    this.ctx.fillText(\"Player 1\", 850, 50);\n    this.ctx.textAlign = \"left\";\n    this.ctx.fillText(\"Player 2\", 950, 50);\n    this.ctx.beginPath();\n    if (this.currentPlayer == 1) {\n      this.ctx.arc(870, 35, 10, 0, Math.PI * 2, false);\n    } else {\n      this.ctx.arc(930, 35, 10, 0, Math.PI * 2, false);\n    }\n    this.ctx.fillStyle = \"red\";\n    this.ctx.fill();\n    for (let i = 0; i < 7; i++) {\n      let ballPos;\n      const drawEmpty = () => {\n        this.ctx.beginPath();\n        this.ctx.arc(ballPos.x, ballPos.y, _PoolGame.BALL_RADIUS, 0, Math.PI * 2, false);\n        this.ctx.fillStyle = \"black\";\n        this.ctx.fill();\n      };\n      ballPos = new Vec2(570 + i * (2 * _PoolGame.BALL_RADIUS + 5), 80);\n      if (i < this.scoredBallsP1.length) {\n        this.scoredBallsP1[i].position = ballPos;\n        this.scoredBallsP1[i].draw(this.ctx);\n      } else {\n        drawEmpty();\n      }\n      ballPos = new Vec2(960 + i * (2 * _PoolGame.BALL_RADIUS + 5), 80);\n      if (i < this.scoredBallsP2.length) {\n        this.scoredBallsP2[i].position = ballPos;\n        this.scoredBallsP2[i].draw(this.ctx);\n      } else {\n        drawEmpty();\n      }\n    }\n  }\n  drawTable() {\n    this.ctx.fillStyle = \"brown\";\n    this.ctx.strokeStyle = \"black\";\n    this.ctx.lineWidth = 5;\n    roundRect(this.ctx, 100, 120, 1600, 800, 50, true);\n    this.ctx.fillStyle = \"darkgreen\";\n    this.ctx.strokeStyle = \"darkgreen\";\n    this.ctx.fillRect(150, 170, 1500, 700);\n    for (let pocket of this.pockets) {\n      pocket.draw(this.ctx);\n    }\n    for (let wall of _PoolGame.WALL_VERTICES) {\n      this.ctx.beginPath();\n      this.ctx.fillStyle = \"green\";\n      this.ctx.moveTo(wall[0].x, wall[0].y);\n      for (let i = 1; i < wall.length; i++) {\n        this.ctx.lineTo(wall[i].x, wall[i].y);\n      }\n      this.ctx.fill();\n    }\n  }\n  drawAnnouncementText() {\n    const x = _PoolGame.PLAYABLE_AREA[0] + _PoolGame.PLAYABLE_AREA[2] / 2;\n    const y = _PoolGame.PLAYABLE_AREA[1] + _PoolGame.PLAYABLE_AREA[3] * 0.1;\n    this.ctx.fillStyle = \"yellow\";\n    this.ctx.strokeStyle = \"black\";\n    this.ctx.lineWidth = 2;\n    this.ctx.font = \"70px arial\";\n    this.ctx.textBaseline = \"alphabetic\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillText(this.announcementText, x, y);\n    this.ctx.strokeText(this.announcementText, x, y);\n  }\n  onDraw() {\n    this.drawTable();\n    for (const ball of this.ballsOnTable) {\n      ball.draw(this.ctx);\n    }\n    if (this.cue.enabled) {\n      this.cue.draw(this.ctx);\n    }\n    this.drawPlayerScoresPanel();\n    if (this.announcementText.length > 0) {\n      this.drawAnnouncementText();\n    }\n  }\n};\nlet PoolGame = _PoolGame;\nPoolGame.BALL_RADIUS = 20;\nPoolGame.PLAYABLE_AREA = [180, 200, 1440, 640];\nPoolGame.WALL_VERTICES = [\n  [new Vec2(190, 170), new Vec2(220, 200), new Vec2(850, 200), new Vec2(865, 170)],\n  [new Vec2(935, 170), new Vec2(950, 200), new Vec2(1580, 200), new Vec2(1610, 170)],\n  [new Vec2(150, 210), new Vec2(180, 240), new Vec2(180, 800), new Vec2(150, 830)],\n  [new Vec2(1650, 210), new Vec2(1620, 240), new Vec2(1620, 800), new Vec2(1650, 830)],\n  [new Vec2(190, 870), new Vec2(220, 840), new Vec2(850, 840), new Vec2(865, 870)],\n  [new Vec2(935, 870), new Vec2(950, 840), new Vec2(1580, 840), new Vec2(1610, 870)]\n];\nexport default PoolGame;\n", "import PoolGame from \"./PoolGame.js\";\nconst canvas = document.getElementById(\"canvas\");\ncanvas.width = canvas.offsetWidth;\ncanvas.height = canvas.offsetHeight;\nconst game = new PoolGame(canvas);\ngame.start();\nexport {};\n"],
  "mappings": "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",
  "names": []
}
